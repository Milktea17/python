1. csv 라이브러리 부르기
>>> import csv

2. csv 파일열기
>>> 변수명 = open('파일명')

3. 데이터를 ,로 구분하여 저장
>>> data=csv.reader(변수명)

4. 한줄씩 출력
>>> print(data[])


실습
import csv
f = open('data/population.csv')

data = csv.reader(f)
data = list(data) #리스트로 저장

print(data[0])
print(data[1])
print(data[2])

실행결과
> ['행정구역', '총인구수', '연령구간인구수', '0세', '1세', '2세', '3세', '4세', '5세', '6세', '7세', '8세', '9세', '10세', '11세', '12세', '13세', '14세', '15세', '16세', '17세', '18세', '19세', '20세', '21세', '22세', '23세', '24세', '25세', '26세', '27세', '28세', '29세', '30세', '31세', '32세', '33세', '34세', '35세', '36세', '37세', '38세', '39세', '40세', '41세', '42세', '43세', '44세', '45세', '46세', '47세', '48세', '49세', '50세', '51세', '52세', '53세', '54세', '55세', '56세', '57세', '58세', '59세', '60세', '61세', '62세', '63세', '64세', '65세', '66세', '67세', '68세', '69세', '70세', '71세', '72세', '73세', '74세', '75세', '76세', '77세', '78세', '79세', '80세', '81세', '82세', '83세', '84세', '85세', '86세', '87세', '88세', '89세', '90세', '91세', '92세', '93세', '94세', '95세', '96세', '97세', '98세', '99세', '100세 이상']
['서울특별시  (1100000000)', '9857426', '9857426', '61253', '70532', '74322', '72482', '71688', '78941', '75386', '75929', '71772', '76157', '80577', '74502', '72380', '80264', '83081', '83791', '93326', '108584', '105344', '112807', '120957', '125632', '134735', '143930', '149420', '159845', '161550', '150999', '149562', '150485', '146573', '148015', '150838', '149335', '163855', '173092', '173138', '169187', '165335', '139821', '150481', '147416', '150031', '162292', '168414', '171738', '181275', '175113', '172711', '168518', '157576', '144996', '154444', '153733', '146916', '158349', '163134', '168880', '158018', '147497', '147029', '133804', '141178', '119297', '105263', '114400', '80233', '89224', '89871', '88753', '90591', '73185', '64285', '64933', '63515', '74898', '60021', '50860', '49861', '43160', '38593', '34377', '31713', '26206', '21753', '19206', '15377', '13515', '12208', '10165', '8200', '5892', '4695', '3589', '3501', '2569', '1851', '1436', '1010', '736', '5519']
['서울특별시 종로구 (1111000000)', '154770', '154770', '652', '794', '911', '895', '859', '1046', '909', '1012', '919', '1006', '1089', '1039', '1008', '1110', '1167', '1208', '1374', '1558', '1541', '1884', '2149', '2128', '2287', '2384', '2576', '2636', '2672', '2481', '2304', '2290', '2188', '2131', '2147', '2005', '2191', '2179', '2332', '2219', '2227', '1814', '2018', '2043', '2101', '2393', '2557', '2657', '2953', '2865', '2775', '2710', '2630', '2399', '2618', '2655', '2513', '2649', '2726', '2768', '2529', '2370', '2341', '2175', '2329', '1939', '1706', '1862', '1275', '1465', '1501', '1465', '1618', '1279', '1201', '1206', '1277', '1489', '1266', '1094', '1086', '923', '778', '779', '694', '576', '493', '421', '388', '302', '260', '231', '187', '149', '115', '95', '79', '81', '60', '46', '37', '26', '226']


>>> print(data[0:3]) #print 코드한줄로 출력시키기 슬라이싱사용


###########################33for문 사용해서 출력하기

import csv
f = open('data/population.csv')

data = csv.reader(f)
data = list(data)

count = 0
for row in data :
    print(row)
    count = count + 1 #후위연산자 안됨(count++)
		
    if(count >= 3) :
        break

###################################################

next(data) #다음 데이터를 가져온다(0번째 지나감)

###################################################

꺾은선 그래프를 사용할 수 있는 .plot()
그래프를 나타내주는 .show()

result = []
for row in data :
    if '도담동' in row[0] : #도담동이면
        for i in range(3,len(row)) : #3번째부터 row의 문자열길이-1까지
            result.append(int(row[i]))

plt.plot(result)
plt.savefig('data/step4-1.png')


#################################################
pivot = []

name = input('궁금한 지역 이름을 입력해주세요 : ') #키보드로 입력받음 scanf

for row in data :
    if name in row[0] : #name의 데이터가 있으면
        for i in range(3,len(row)) : 
            pivot.append(int(row[i])/int(row[2])) #pivot리스트에 담음
mn = 1

for row in data : #data를 돌면서 가장 비슷한 지역 찾기
    s = 0
    for i in range(3, len(row)) :
        row[i] = int(row[i])/int(row[2])
        tmp = (row[i] - pivot[i-3]) ** 2 #data 돌면서 찾는 지역(pivot)과 입력받은 지역(tmp)의 오차구함
        s = s+tmp
    if s<mn and (row[0] not in name) :
        result = []
        for i in range(3, len(row)) :
            result.append(row[i])
        mn = s            
            
plt.plot(pivot) #plot:꺾은선 그래프를 사용
plt.plot(result) 
plt.savefig('data/step4-3.png')
plt.show() #show:그래프를 보여줌

#################################################

plt.rc('font', family = 'NanumGothic') #rc(): 글꼴바꾸기
plt.style.use('ggplot') #stype.use() 그래프 스타일 조정
plt.figure(dpi=300) #figure() : 해상도조정
plt.plot(pivot, label = name) #도담동 
plt.plot(result, label = result_name) #도담동이랑 비슷한 지역
plt.legend() #legend() : 범례표시, 괄호가 비면 기본값이다
plt.savefig('data/step4-4.png') #그래프를 이미지 파일로 나타내는 코드
plt.show()

#################################################