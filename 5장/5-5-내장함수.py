#abs 절댓값 리턴
print(abs(3)) #3
print(abs(-3)) #3
print(abs(-1.2)) #1.2

print("="*40)
#=============================================

#all 요소가 모두 참 True, 하나라도 거짓이면 False
print(all([1,2,3])) #True
print(all([1,2,3,0])) #False 요소 0은 거짓
print(all([])) #True 빈 값일때는 True

print("="*40)
#=============================================

#any 하나라도 참 True, 모두 거짓이면 False
print(any([1,2,3,0])) #True 하나라도 참
print(any([0,""])) #False 모두 거짓
print(any([])) #False

print("="*40)
#=============================================

#chr 유니코드 숫자 값을 입력받아 그 코드에 해당하는 문자 리턴
print(chr(97)) #a
print(chr(44032)) #가

print("="*40)
#=============================================

#dir 객체가 지닌 변수나 함수를 보여준다
print(dir([1,2,3])) #['__add__', '__class__', ...] 리스트의 함수를 보여준다
print(dir({'1':'a'})) #['__class__', '__class_getitem__'...] 딕셔너리의 함수를 보여준다.

print("="*40)
#=============================================

#divmod(a,b) a를 b로 나눈 몫과 나머지를 튜플로 리턴
print(divmod(7,3)) #(2,1)

print("="*40)
#=============================================

#enumerate 순서가 있는 데이터(리스트,튜플,문자열)를 입력으로 받아
#인덱스 값을 포함하는 enumerate객체를 리턴

#for문처럼 반복되는 구간에서 객체의 인덱스 값이 필요할 때 유용

for i, name in enumerate(['body', 'foo', 'bar']):
    print(i,name)
'''
0 body
1 foo
2 bar
'''

print("="*40)
#=============================================

#eval 문자열로 구성된 표현식을 입력으로 받아 해당 문자열을 실행한 결괏값 리턴
print(eval('1+2')) #3
print(eval("'hi'+'a'")) #hia
print(eval('divmod(4,3)')) #(1,1)

print("="*40)
#=============================================

